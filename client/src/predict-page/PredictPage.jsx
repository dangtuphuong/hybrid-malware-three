import React, { useCallback, useEffect, useMemo, useRef, useState } from "react";
import toast, { Toaster } from 'react-hot-toast';
import { useNavigate } from "react-router-dom";
import AuthService from "../services/auth-service";
import styles from "./PredictPage.module.scss";
import DataService from "../services/data-service";

const PredictPage = () => {
  const navigate = useNavigate();
  const [trainFile, setTrainFile] = useState(null);
  const [label, setLabel] = useState(null);
  const [models, setModels] = useState([]);
  const [chosenModel, setChosenModel] = useState();
  const fileInputRef = useRef(null);

  useEffect(() => {
    DataService.getModels(setModels)
  }, [])

  useEffect(() => {
    if (models && models.length !== 0) {
        setChosenModel(models[0].id);
    }
  }, [models])

  const handleChangeFile = (e) => {
    setTrainFile(e.target.files[0]);
  }

  const handleClick = () => {
    fileInputRef.current.click();
  }

  const handleLabelChange = (e) => {
    setLabel(e.target.value);
  }

  const handleSubmit = async () => {
    if (!trainFile) {
      toast.error('Choose a file befor submit');
      return;
    }
    if (!label) {
      toast.error('Input a label before submit');
      return;
    }

    const data = await DataService.predictData(trainFile, label, chosenModel);

    if (data) {
       navigate('/report/predict', { state: data });
    }
  }

  const handleChosenModelChange = (e) => {
    setChosenModel(e.target.value);
  }

  return (
    <div className={styles.container}>
      <Toaster />
      <h2>Malware Prediction</h2>
      <p className={styles.guide}>Please select the dataset and the model you want</p>
      <div className={styles.selectDiv}>
        <p>Choose the model you want</p>
        <select className={styles.selectBtn} onChange={handleChosenModelChange}>
            { models.map((model, id) => 
                <option key={id} value={model.id}>{model.modelName} - {model.id}</option>
            )}
        </select>
      </div>
      <div className={styles.importContainer}>
        { trainFile && 
          <p className={styles.fileName}>{trainFile.name}</p>
        }
        <p className={styles.guideImport}>Drag and drop file here, or</p>
        <button className={styles.browseBtn} onClick={handleClick}>Browse</button>
        <p className={styles.guide}>Supported files: CSV</p>
      </div>
      <div>
        <div style={{ 
          display: "flex",
          margin: "auto",
          marginBottom: "15px",
          justifyContent: "center",
          gap: '10px'
        }}>
          <p style={{ fontStyle: 'italic' }}>Input the label: </p>
          <input type='text' style={{
            padding: '5px',
            height: 'fit-content',
            alignSelf: 'center'
          }} onChange={handleLabelChange}/>
        </div>
      </div>
      
      <input 
        type="file" 
        accept=".csv" 
        onChange={handleChangeFile} 
        style={{ display: 'none' }}
        ref={fileInputRef}
      />
      <button type="button" className={styles.submitBtn} onClick={handleSubmit}>
        Submit
      </button>
    </div>
  );
};

export default PredictPage;
